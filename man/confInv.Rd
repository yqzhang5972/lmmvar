% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{confInv}
\alias{confInv}
\title{find confidence interval for h2}
\usage{
confInv(
  y,
  X,
  lambda,
  range_h = as.numeric(c(0, 1)),
  tolerance = 1e-04,
  confLevel = 0.95,
  maxiter = 50L
)
}
\arguments{
\item{y}{A n\eqn{\times}1 vector of observed responses.}

\item{X}{A n\eqn{\times}p predictors matrix, n > p.}

\item{lambda}{A n\eqn{\times}1 vector represent values in the diagonal matrix Lambda. Values need to be non-negative.}

\item{range_h}{A vector of length 2 giving the boundary of range in which to apply searching algorithms. Needs to be within [0,1).}

\item{tolerance}{A positive numeric. Differences smaller than tolerance are considered to be equal.}

\item{confLevel}{A numeric within [0,1]. Confidence level.}

\item{maxiter}{A positive integer. Warning would appear if number of iterations in searching for minimum values or lower, upper bounds exceeds this value.}
}
\value{
A vector of length 2 showing confidence interval. NA if no root found.
}
\description{
{ calculating confidence interval for h2,
which is the proportion of variation of indepedent random component versus the total variation in a linear mixed model.
Using Ternary search for finding the minimum, and binary search for finding roots.
}
}
\details{
{ Assuming the linear mixed model follows \eqn{y \sim N(X\beta, \sigma_g\Lambda + \sigma_e I_n)}.
The proportion of variation of indepedent random component, \eqn{h^2}, is \eqn{\sigma_g / (\sigma_g+\sigma_e)},
the total variation \eqn{\sigma_p = \sigma_g+\sigma_e}, then y can also be seen to follow \eqn{N(X\beta, \sigma_p(h^2\Lambda + (1-h^2)I_n))}.
\eqn{\Lambda} is a diagonal matrix which can be achieved by applying eigen decomposition to your non-diagonal SPD \eqn{\Lambda} as well as X and y.
By the nature of the model, the support set of h2 has to be in [0,1), and we assuming the test statistics forms a quasi-convex trend.
}
}
